name: TCD.API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

run-name: |
  [TCD.Portal] ${{ github.event.head_commit.message || format('PR #{0} - {1}', github.event.pull_request.number, github.event.pull_request.title) }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23.0.1'
          distribution: 'oracle'

      - name: Inject environment variables from GitHub Secrets
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/testdb" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=testuser" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=testpassword" >> $GITHUB_ENV

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            nc -z localhost 5432 && echo "PostgreSQL is ready" && exit 0
            echo "Waiting for PostgreSQL..."
            sleep 3
          done
          echo "PostgreSQL did not start in time" && exit 1

      - name: Build with Maven
        run: mvn -B package --file TheCollectorsDenAPI/pom.xml

      - name: Run tests with Maven
        run: mvn -B test --file TheCollectorsDenAPI/pom.xml

      # Optional: Upload dependency graph
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
